/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var D=Object.prototype.hasOwnProperty;var H=(c,l)=>{for(var t in l)w(c,t,{get:l[t],enumerable:!0})},R=(c,l,t,e)=>{if(l&&typeof l=="object"||typeof l=="function")for(let n of V(l))!D.call(c,n)&&n!==t&&w(c,n,{get:()=>l[n],enumerable:!(e=I(l,n))||e.enumerable});return c};var F=c=>R(w({},"__esModule",{value:!0}),c);var W={};H(W,{default:()=>C});module.exports=F(W);var a=require("obsidian"),v="comment-view",C=class extends a.Plugin{constructor(){super(...arguments);this.debounceUpdate=(0,a.debounce)(this.updateComments,500,!0)}async onload(){let t=this.app.workspace.getActiveViewOfType(a.MarkdownView);if(!t){console.error("Could not get active markdown view when setting up plugin");return}this.registerMarkdownPostProcessor(this.postProcessor.bind(this)),this.mdView=t,this.addRibbonIcon("message-circle","Comments",()=>{this.activateView()}),this.registerView(v,e=>new g(e,this)),this.modifyListener=this.app.vault.on("modify",e=>{this.debounceUpdate(e)}),this.fileOpenListener=this.app.workspace.on("file-open",e=>{e&&this.updateComments(e)}),this.addCommand({id:"add",name:"Add comment at the current cursor position",editorCallback(e){e.replaceRange(`> [!comment] NAME | ${new Date().toLocaleDateString()}
> COMMENT`,e.getCursor("from"),e.getCursor("to"))}})}async activateView(){let{workspace:t}=this.app,e=null,n=t.getLeavesOfType(v);if(n.length>0)e=n[0];else{if(e=t.getRightLeaf(!1),!e)return;await e.setViewState({type:v,active:!0})}t.revealLeaf(e)}onunload(){this.app.workspace.offref(this.modifyListener),this.app.workspace.offref(this.fileOpenListener)}postProcessor(t,e){if(this.mdView.getMode()=="source")return;t.findAll(".callout").filter(i=>{var s;return((s=i.getAttribute("data-callout"))==null?void 0:s.toLowerCase())==="comment"}).forEach(i=>{i.hide()})}async updateComments(t){if(!(t instanceof a.TFile))return;let e=await t.vault.cachedRead(t),n=this.findComments(t,e,{line:0,ch:0});this.app.workspace.getLeavesOfType(v).forEach(i=>{i.view instanceof g&&i.view.setComments(n,t.name)})}findComments(t,e,n,i){var d,m;let s=[],o=/> \[!comment\] (.+?)\n((?:> *.*\n?)+)/gi,r=e.matchAll(o);for(let p of r){let h=p[1].trim(),x,E;if(!p.index)continue;if(h.indexOf("| ")>=0){let f=h.slice(h.indexOf("| ")+2),b=parseInt(f.slice(0,2)),A=parseInt(f.slice(3,5)),O=parseInt(f.slice(6));x=new Date(O,A-1,b),h=h.slice(0,h.indexOf("| "))}let u=p[2].split(`
`).map(f=>f.replace(/^>/,"").trim()).join(`
`),k=(((d=e.slice(0,p.index).match(/\n/g))==null?void 0:d.length)||-1)+1,y=(((m=e.slice(0,p.index+p[0].length).match(/\n/g))==null?void 0:m.length)||-1)+1,L={line:k+n.line,ch:0},P={line:y+n.line,ch:0};i?E=i:E={line:P.line,ch:0};let M=this.findComments(t,u,{line:L.line,ch:0},E);u.indexOf(">")>=0&&(u=u.slice(0,u.indexOf(">"))),s.push({name:h,content:u,startPos:L,endPos:P,children:M,contentPos:E,file:t,timestamp:x,childrenHidden:!0})}return s}},g=class extends a.ItemView{constructor(t,e){super(t);this.comments={};this.plugin=e}getIcon(){return"message-circle"}getViewType(){return v}getDisplayText(){return"Comment view"}setComments(t,e){var n;(n=this.comments[e])==null||n.forEach(i=>{let s=t.findIndex(o=>{i.startPos===o.startPos&&(i.content,o.content)});s>=0&&(t[s].childrenHidden=i.childrenHidden)}),this.comments[e]=t,this.renderComments(e)}renderComments(t){this.commentsEl.empty(),this.comments[t].forEach((e,n)=>{var d;let i=this.commentsEl.createEl("div",{cls:"comment-item-container"}),s=i.createEl("div",{cls:"comment-header"});s.createEl("b",{text:`Line ${e.endPos.line}`,cls:"comment-line"});let o=s.createEl("button",{text:"+",cls:"comment-minimize"});s.createEl("b",{cls:"comment-item-date",text:(d=e.timestamp)==null?void 0:d.toLocaleDateString()});let r=i.createEl("div",{cls:"comment-item"});if(r.createEl("p",{text:`${e.content}`,cls:"comment-item-text"}),r.createEl("i",{text:e.name,cls:"comment-name"}),e.children.length>0){let m=i.createEl("div",{cls:"comment-children"});T(m),this.renderChildrenComments(e.children,t,m),o==null||o.addEventListener("click",()=>{$(m)?(S(m),o.innerText="-"):(T(m),o.innerText="+")})}else o.hide(),o.setAttr("hidden",!0);r.addEventListener("click",()=>this.navigateToComment(e,t)),r.addEventListener("contextmenu",m=>this.showCommentOptions(m,e,!1))})}renderChildrenComments(t,e,n){n.empty(),t.forEach(i=>{let s=n.createEl("div",{cls:"comment-child-container"});s.createEl("div",{cls:"comment-child-separator"});let o=s.createEl("div",{cls:"comment-header"});o.createEl("div"),o.createEl("b",{cls:"comment-child-date",text:i.timestamp?i.timestamp.toLocaleDateString():""});let r=s.createEl("div",{cls:"comment-child"});r.createEl("p",{text:`${i.content}`,cls:"comment-child-text"}),r.createEl("i",{text:i.name,cls:"comment-name"}),r.addEventListener("click",()=>this.navigateToComment(i,e)),r.addEventListener("contextmenu",d=>this.showCommentOptions(d,i,!0))})}async navigateToComment(t,e){var s;await this.app.workspace.openLinkText("",e);let n=(s=this.app.workspace.getActiveViewOfType(a.MarkdownView))==null?void 0:s.editor,i=this.app.workspace.getActiveFile();n&&i&&(n.setCursor(t.contentPos),n.scrollIntoView({from:t.contentPos,to:t.contentPos},!0))}showCommentOptions(t,e,n){let i=new a.Menu,s="Add subcomment",o="Remove entire comment";n&&(s="Add follow-up subcomment",o="Remove subcomment"),i.addItem(r=>{r.setTitle(s).setIcon("plus").onClick(()=>this.addComment(e))}),i.addItem(r=>{r.setTitle(o).setIcon("trash").onClick(()=>this.removeComment(e))}),i.showAtMouseEvent(t)}addComment(t){this.app.vault.process(t.file,e=>{let n=e.split(`
`);return n.splice(t.endPos.line-1,0,"> ",`>> [!comment] NAME | ${new Date().toLocaleDateString()}`,">> COMMENT"),e=n.join(`
`),e})}async removeComment(t){this.app.vault.process(t.file,e=>{let n=e.split(`
`);return n.splice(t.startPos.line-1,t.endPos.line-t.startPos.line),e=n.join(`
`),e}),this.comments[t.file.name].remove(t),this.renderComments(t.file.name)}async onOpen(){let t=this.containerEl.children[1];t.empty();let e=t.createEl("div");e.createEl("h2",{text:"Comments",cls:"comments-title"}),this.commentsEl=e.createEl("div");let n=this.app.workspace.getActiveFile();n&&this.plugin.updateComments(n)}async onClose(){}};function T(c){c.addClass("hidden")}function S(c){c.removeClass("hidden")}function $(c){return c.classList.contains("hidden")}

/* nosourcemap */